#!/usr/bin/env bash
# ============================================================================ #
# WineZGUI (winezgui) (C) GPL3 Mohammed Asif Ali Rizvan <fast.rizwaan@gmail.com>
# URL: https://github.com/fastrizwaan/WineZGUI
# winezgui main program to run or create a wine prefix for a selected exe
# ============================================================================ #
export AUTHOR="Mohammed Asif Ali Rizvan"
export EMAIL="fast.rizwaan@gmail.com"
export COPYRIGHT="GNU General Public License (GPLv3+)"
export WEBSITE="https://github.com/fastrizwaan/WineZGUI"
# Variables
export DEBUG="Y"
export PROCESSNAME="$0"
export HEADER="$(basename ${0})" # for Terminal Messages
# These values will be assigned by Setup using sed command
export APPNAME=WineZGUI   # Application Name
export APPVERSION="0.88"
export APP_WITH_VER="${APPNAME}-${APPVERSION}" # Example: WineZGUI-0.88
export DATADIR=/usr/share/winezgui # scripts & data dir; /usr changes to prefix
export INSTALL_TYPE="system"
export WINEZGUIDIR="$(realpath -m ~/.local/share/winezgui)"
export FLATPAK_NAME=""
#/These values will be changed  by Setup using sed command
export SETTINGS_FILE="${WINEZGUIDIR}/Settings.yml" # Settings file 
export TEMPLATES_DIR="${WINEZGUIDIR}/Templates"    # Prefix Templates Directory
export PREFIXES_DIR="${WINEZGUIDIR}/Prefixes"      # Scripts Prefixes Directory
# Commands used by WineZGUI and Scripts
export UPDATE_ICON_CACHE="gtk-update-icon-cache -f -t ~/.local/share/icons >/dev/null"
export UPDATE_DESKTOP_DATABASE="update-desktop-database"
export WINEVER=$(wine --version|cut -f1 -d " ")
export WBOOT_CMD="$(which wineboot) -i"
export ICOTOOL_CMD="$(which icotool)"
export WRESTOOL_CMD="$(which wrestool)"
export ZENITY_CMD="$(which zenity)"
export EXIFTOOL_CMD="$(which exiftool)"
export ZSTD_CMD="$(which zstd)"
export TAR_CMD="$(which tar)"
export WGET_CMD="$(which wget)"
# LD_LIBRARY_PATH
if [ -z "${LD_LIBRARY_PATH}" ]; then
LD_LIBRARY_PATH+="/lib:/lib32:/lib64"; fi
LD_LIBRARY_PATH+="${LD_LIBRARY_PATH}:/app/lib:/app/lib32:/app/lib64:"
LD_LIBRARY_PATH+="/app/lib/i386-linux-gnu:/app/lib/wine:"
LD_LIBRARY_PATH+="/app/lib64/wine:"
LD_LIBRARY_PATH+="/usr/lib/x86_64-linux-gnu/wine:"
LD_LIBRARY_PATH+="/usr/lib/wine:"
LD_LIBRARY_PATH+="/usr/lib/wine/wine:"
LD_LIBRARY_PATH+="/usr/lib64/wine:"
LD_LIBRARY_PATH+="/usr/lib64/wine/wine:"
LD_LIBRARY_PATH+="/usr/lib/i386-linux-gnu/wine:"
LD_LIBRARY_PATH+="$(pwd)"
export LD_LIBRARY_PATH
export PATH=${PATH}:$(pwd)
export ARGV="$@"
export WINE_CMD="$(which wine)"
export WINETRICKS="$(which winetricks)"
export INFOFILE="${PREFIXDIR}/Info.yml"
export ABOUTFILE="${WINEZGUIDIR}/About.yml"
export APPLICATIONSDIR="$(realpath -m ~/.local/share/applications)"
# Shortcuts directory for winezgui scripts symbolic links
if [ "${INSTALL_TYPE}" = "system" ]; then 
     DESKTOPDIR="$(realpath -m ${APPLICATIONSDIR}/winezgui)"
else 
     DESKTOPDIR="$(realpath -m ${APPLICATIONSDIR}/winezgui/${FLATPAK_NAME})"
fi
export DESKTOPDIR
export BKP_EXT="wzt" # winezgui backup file extension

# If prefix=nothing then install to /usr
if [ -z "${INSTALL_PREFIX}" ]; then
     INSTALL_PREFIX="/usr"
fi

# Flatpak Specific Commands and Variables
if [ "${FLATPAK}" = "true" ]; then
     echo setting prefix and paths for flatpak
     INSTALL_PREFIX="/app"
     TEMPDIR="\$(realpath -m \~/.var/app/${FLATPAK_NAME}/data/tmp)"
     WINEZGUIDIR="$(realpath -m ~/.local/share/winezgui)"
     INSTALL_TYPE="system"
fi


WineZGUI_Window() # Main WineZGUI application window function
{
  HEADER="$(basename ${0})"
  SELECTION=$(${ZENITY_CMD} --list --hide-header --title "${APP_WITH_VER}"    \
                     --width=360 --height=440 --radiolist --column " " \
                     --column "Action"                         \
                         TRUE "Open Exe..."                    \
                            0 "Launch..."                      \
                            0 "Script..."                      \
                            0 "Backup..."                      \
                            0 "Restore..."                     \
                            0 "Delete..."                      \
                            0 "Template..."                    \
                            0 "Settings..."                    \
                            0 "Kill all..."                    \
                            0 "More..."                        \
                            0 "Help..."                        \
                            0 "About..."                       \
                            0 "Quit..."                        \
                       --text "<b>Wine GUI using Zenity...</b>")
  
  if    [ -z "${SELECTION}" ]; then # Exit if Cancel is clicked
          echo "I: ${HEADER}: Cancel Selected. Bye!"
          exit 0
  fi         
 
  DBUG "I: ${HEADER}: ${SELECTION} Selected!" # Show What is selected
 
  if   [ "${SELECTION}" = "Open Exe..." ]; then
         source "${DATADIR}/winezgui-open-exe"
         WineZGUI_Open_Exe

  elif [ "${SELECTION}" = "Launch..."  ]; then
         source "${DATADIR}/winezgui-launch"
         WineZGUI_Launch

  elif [ "${SELECTION}" = "Script..."  ]; then
         source "${DATADIR}/winezgui-script"
         WineZGUI_Script

  elif [ "${SELECTION}" = "Backup..." ]; then
         source "${DATADIR}/winezgui-backup"
         WineZGUI_Backup

  elif [ "${SELECTION}" = "Restore..." ]; then
         source "${DATADIR}/winezgui-restore"
         WineZGUI_Restore

  elif [ "${SELECTION}" = "Template..." ]; then
         source "${DATADIR}/winezgui-template"
         WineZGUI_Template

  elif [ "${SELECTION}" = "Settings..."  ]; then
         source "${DATADIR}/winezgui-settings"
         WineZGUI_Settings

  elif [ "${SELECTION}" = "More..."  ]; then
         source "${DATADIR}/winezgui-more"
         WineZGUI_More

  elif [ "${SELECTION}" = "Delete..."  ]; then
         source "${DATADIR}/winezgui-delete-prefix"
         WineZGUI_Delete_Prefix

  elif [ "${SELECTION}" = "Help..." ]; then
         source "${DATADIR}/winezgui-help"
         WineZGUI_Help

  elif [ "${SELECTION}" = "About..." ]; then
         source "${DATADIR}/winezgui-about"
         WineZGUI_About

  elif [ "${SELECTION}" = "Kill all..." ]; then
         source "${DATADIR}/winezgui-kill-all"
         WineZGUI_Kill_All

  elif [ "${SELECTION}" = "Quit..." ]; then
         source "${DATADIR}/winezgui-quit"
         WineZGUI_Quit
  fi

  WineZGUI_Window  # After All options
} 

#------------------------------- Startup -----------------------------#
# Load file with DBUG function
source "${DATADIR}/winezgui-dbug"

source "${DATADIR}/winezgui-cli-arguments"
WineZGUI_Cli_Arguments

source "${DATADIR}/winezgui-startup-checks"
WineZGUI_Startup_Checks

source "${DATADIR}/winezgui-check-file-type"
WineZGUI_Check_File_Type "${1}"

DBUG "I: ${HEADER}: Launching ${APPNAME}"
WineZGUI_Window

