#!/usr/bin/env bash
# ============================================================================ #
# This script will create a shortcut on applications menu for windows programs 
# installed with wine.
# Autor: Thiago silva
# Contact: thiagos.dasilva@gmail.com
# URL: https://github.com/thiggy01/wine-create-shortcut
# Updated by Mohammed Asif Ali Rizvan for wine bottle
# URL: https://github.com/fastrizwaan/flatpak-wine
# ============================================================================ #
export APPNAME=WineZGUI
export WINEVER=$(wine --version|cut -f1 -d ' ')
export APPLICATIONSDIR=$(realpath -m ~/.local/share/applications)
export DESKTOPDIR=${APPLICATIONSDIR}/winezgui
export WINEZPREFIX="$(realpath -m ~/.local/share/winezgui)"
export PREFIXDIR=${WINEZPREFIX}
export RUN_UPDATE_ICON_CACHE="gtk-update-icon-cache"
export RUN_UPDATE_DESKTOP_DATABASE="update-desktop-database ${APPLICATIONSDIR}/"
export WINE_CMD=$(which wine)
export WINETRICKS_CMD=$(which winetricks)
export TMPDIR="/tmp"

mkdir -vp "$TMPDIR"

# Check if an application argument was submited.
if [[ $(file --mime-type -b "$1") = application/* ]]; then

    # Get the full path, the name and directory name of submited application file.
    myFile=$(realpath -m "$1")
    myBaseName=$(basename "$myFile")
    myPath=$(dirname "$myFile")
	  myBaseNamePrefix=$(echo $myBaseName|tr ' ' '_');
    wineprefix_dir="${PREFIXDIR}/$myBaseNamePrefix"    
    #put desktop/icon/link inside newly created prefix
	  wineprefix_dir_dir="${wineprefix_dir}/${myBaseNamePrefix}"    
	# application shortcut folder
    mkdir -p  "${PREFIXDIR}$myBaseNamePrefix"
    mkdir -p  "$wineprefix_dir"
    # Function to verify if required program is installed.
    VerInst () {
	if [ $? -eq 127 ]; then
	    echo "$1 package is not installed."
	    echo "Install it before running this script."
	    echo "Aborting."
	    exit 1
	fi
    }

    # Extract icon and convert it to several png files of diferent quality, 
    wrestool -x -t 14 "$myFile" > "${TMPDIR}/$myBaseName.ico" 2> /dev/null
    VerInst icoutils
    convert -alpha on "${TMPDIR}/$myBaseName.ico" "${TMPDIR}/$myBaseName.png" 2> /dev/null
    VerInst imagemagick
    # Select the best png image file.\
    ls $TMPDIR
    echo TMPDIR=$TMPDIR
    cp "$(ls -S -1 "${TMPDIR}/$myBaseName"*".png"  | head -n 1)" "$wineprefix_dir_dir.icon.png"
    rm -rf $TMPDIR ; #remove tmp directory after copying icon png
    # Get the app category and shortcut name inputs from the user.
    appCategory=$(zenity --title "wine-create-shortcut" --height=450 --list \
 --radiolist --column " " --column "Categories" 0 AudioVideo 0 Audio 0 Video 0 \
 Development 0 Education TRUE Game 0 Graphics 0 Network 0 Office 0 Settings 0 \
 System 0 Utility  --text "Select a Category:" 2> /dev/null)


    VerInst zenity
    PROGNAME=$(zenity --title "wine-create-shortcut" --text "Enter a name for your \
shortcut" --entry)

    if [ ! "$PROGNAME" ]; #if no name is given use filename
       then         
       PROGNAME=$(echo "$myBaseName (${WINEVER})"|sed 's/\.exe//g');     
    else 
       PROGNAME=$(echo "$PROGNAME (${WINEVER})");   
    fi


# try to add wineprefix for the game
mkdir -p ${PREFIXDIR}/
mkdir -p ${DESKTOPDIR}/


###############################################
cat << EOF > ${PREFIXDIR}/$myBaseNamePrefix/$myBaseNamePrefix.sh
#!/bin/bash
export PREFIX=${PREFIXDIR}/$myBaseNamePrefix
export WINEARCH=win64
export WINEDLLOVERRIDES="mscoree,mshtml="
export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/app/lib:/app/lib32:/app/lib64:/app/lib/i386-linux-gnu:/app/lib/wine:/app/lib64/wine:/app/\$NAME:\$(pwd)

# Remove wine shortcuts before creating new wineprefix
# rm -rfv ~/.var/app/org.winehq.flatpak-wine/data/applications/wine*

echo   ***********************
echo ${PREFIXDIR}/$myBaseNamePrefix/$myBaseNamePrefix.symlinks-removed
ls ${PREFIXDIR}/$myBaseNamePrefix/$myBaseNamePrefix.symlinks-removed
echo 'testing empty'
   # Remove sandboxify by rm links to ~/Documents ~/Downloads ~/Videos etc.
   if [ ! -f ${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.symlinks-removed  ]; then
   
   
    rm ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/Desktop   
    rm ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/Downloads
	  rm ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/'My Documents'
	  rm ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/'My Music'
	  rm ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/'My Pictures'
	  rm ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/'My Videos' 
	  rm ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/Templates

	  #Create normal folders for the deleted symlinks
	  mkdir -p ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/Desktop
	  mkdir -p ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/Downloads
	  mkdir -p ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/'My Documents'
	  mkdir -p ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/'My Music'
	  mkdir -p ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/'My Pictures'
	  mkdir -p ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/'My Videos' 
	  mkdir -p ${PREFIXDIR}/$myBaseNamePrefix/drive_c/users/\$USER/Templates

	  touch ${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.symlinks-removed
   fi

   
# Launch game from flatpak-wine-gui.sh - Run with bottle
if [ "\$1" = "launch" ]; then
export base=\$(basename "$myFile")
export dire=\$(dirname "$myFile")
cd "\$dire"
${WINE_CMD}  "\$base"
exit 0;
fi
# /Launch game from flatpak-wine-gui.sh


choice=\$(zenity --title "$myBaseNamePrefix: Choose!" --width=340 --height=400 \
                 --list \
                 --radiolist --column " " \
                 --column "Action" \
                          0 "Install Custom DLLs..." \
                          TRUE "Launch $myBaseNamePrefix" \
                          0 "Run Winetricks..." \
                          0 "Install Media Foundation Libraries" \
						  0 "Launch Winecfg..." \
                          0 "Open Explorer++..." \
                          0 "Open Shell..." \
						  0 "Rename..." \
						  0 "Change Icon..." \
						  0 "Backup..." \
                          0 "Delete Bottle: $myBaseNamePrefix" \
                 --text "Select Action..." )


[[ -z "\$choice" ]] && exit 1

if [ "\$choice" = "Run Winetricks..." ]; then  
winetricks --gui

    # My_Dlls_install
	elif [ "\$choice" = "Install Custom DLLs..." ]; then
	mydlls=\$(zenity --title "Install custom dlls" --text "paste winetricks (e.g. dv9k dxvk xna31 d3dx9 xinput faudio)" --entry)
    if [ -z "\$mydlls" ]; #if no dlls are given
       then         
       mydlls=(xact xact_x64 xinput xna31 vcrun2003 vcrun2005 vcrun2008 vcrun2010 vcrun2012 vcrun2015 vcrun2019 d3dx9 d9vk faudio quartz dotnet48)
    else
    mydlls=( \$mydlls ) ; #convert string to array
    fi
size=\${#mydlls[*]}
size=\$(expr \$size + 1) ;# add +1 for progress
step=\$(expr 100 / \$size)
step=\$(expr \$step + 1)
prog=\$(echo \$step)

	( for i in \${mydlls[*]};
	  do
    	echo \$prog
	    echo "# Installing \$i..."
	    winetricks --force --unattended \$i
      
        prog=\$(expr \$prog + \$step)
	  done
	  echo 100
	  echo "# Done!"
	) | zenity --width=340 --title "$myBaseNamePrefix: Installing Custom DLLs with Winetricks" --progress --auto-kill

elif [ "\$choice" = "Install Media Foundation Libraries" ]; then
flatpak run --command=/app/mf-install/mf-install.sh org.winehq.flatpak-wine70 

elif [ "\$choice" = "Launch Winecfg..." ]; then
winecfg
elif [ "\$choice" = "Open Explorer++..." ]; then
#wine /app/explorer++/Explorer++.exe
wine explorer
elif [ "\$choice" = "Open Shell..." ]; then   
 gnome-terminal -- bash
 
elif [ "\$choice" = "Rename..." ]; then
     PROGNAME=\$(zenity --title "Rename shortcut" --text "Enter a name for your \
shortcut" --entry)

    if [ ! \$PROGNAME ]; #if no name is given use filename
       then 
       zenity --info --title="Shortcut... " --text="no Change"        
       exit;
    fi
    export WINEVER=\$(wine --version|cut -f1 -d ' ')
    desktop-file-edit --set-name="\$PROGNAME ($WINEVER)" ${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.desktop
	update-desktop-database ${APPLICATIONSDIR}/
	zenity --info --title="$myBaseName.desktop" --text="Shortcut renamed sucessfuly: \$appname"

elif [ "\$choice" = "Change Icon..." ]; then
     get_icon=\$(zenity --file-selection --file-filter=""*.png" "*.jpg" "*.svg"")
     if [ ! \$get_icon ]; #if no icon is choosen
       then 
       zenity --info --title="Icon... " --text="no Change"        
       exit;
     fi
     desktop-file-edit --set-icon="\$get_icon" \${DESKTOPDIR}/"$myBaseName".desktop 
	 update-desktop-database ${APPLICATIONSDIR}/
	 zenity --info --title="$myBaseName.desktop" --text="Icon Changed sucessfuly: \$get_icon"



elif [ "\$choice" = "Backup..." ]; then
     DATE=\$(date +'%Y%m%d')
     mkdir -p \$HOME/flatpak-wine70-backup;
	 tar -zcvf "\$HOME/flatpak-wine70-backup/flatpak-wine70-bottle-$myBaseNamePrefix-\$DATE.tar.gz" \
			${PREFIXDIR}/"$myBaseNamePrefix"          \
			${PREFIXDIR}/"$myBaseNamePrefix.sh"       \
			${PREFIXDIR}/"$myBaseNamePrefix.desktop"  \
			${PREFIXDIR}/"$myBaseNamePrefix.icon.png" \
	     && zenity --info --title="Bottle backed up: $myBaseNamePrefix" --text="flatpak-wine70-bottle-$myBaseNamePrefix-\$DATE.tar.gz at \$HOME/flatpak-wine70-backup"



elif [ "\$choice" = "Delete Bottle: $myBaseNamePrefix" ]; then
rm -rfv ${PREFIXDIR}/$myBaseNamePrefix; 
rm -f "${PREFIXDIR}/$myBaseName.desktop"
rm -f "$wineprefix_dir.desktop" 
rm -f "$wineprefix_dir.icon.png"
rm -f ${PREFIXDIR}/"$myBaseNamePrefix.sh"
rm -f ${DESKTOPDIR}/$myBaseName.desktop
rm -f ${PREFIXDIR}/$myBaseNamePrefix.symlinks-removed
elif [ "\$choice" = "Launch $myBaseNamePrefix" ]; then
export base=\$(basename "$myFile")
export dire=\$(dirname "$myFile")
cd "\$dire"

${WINE_CMD} "\$base"
fi
EOF

###############################################
chmod +x ${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.sh

    # Generate desktop entry specifications to be added to the application launcher.
    deskEntry="[Desktop Entry]"\\n"Exec=bash -c ${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.sh"\\n"Name=\
$PROGNAME"\\n"Path=$myPath"\\n"Type=Application"\\n"Categories=$appCategory\
$category;"\\n"Icon="${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.icon.png""
    # Create a .desktop file and add desktop entries in it.
    echo -e $deskEntry >"${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.desktop"
    echo "Keywords=flatpak; wine;" >> ${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.desktop
    
    # link the launcher  file to a shortcut on applications menu.
    mkdir -p "${PREFIXDIR}"
    
    ln -sfv ${PREFIXDIR}/${myBaseNamePrefix}/${myBaseNamePrefix}.desktop ${DESKTOPDIR}/"$myBaseName".desktop
    # Test if the app link was created sucessfully on applications menu 
    if [ $? -eq 0 ]; then
        ${RUN_UPDATE_ICON_CACHE}
        ${RUN_UPDATE_DESKTOP_DATABASE}
        echo "Shortcut created sucessfuly on applications menu."
    	zenity --info --title="Shortcut created sucessfuly " --text="$myBaseName.desktop"
    fi

else 

# If no application was submited, show this message.
	echo Please, submit a windows application file. 
	echo Usage: $0 path/to/app.exe 
	zenity --info --title="Select an EXE to create shortcut" --text="in Filemanager, right-click on an exe and select this!"

fi
