PROCESS_FILES_FOR_BACKUP()
{
  # Unset any previously initialized variables
  unset SEARCH
  unset REPLACE

  #  Paths needs flatpak/host specific replacement
  # *.reg files
  if [ "${INSTALL_TYPE}" = "flatpak" ]; then
       SEARCH=("\.var\\\\\\\\app\\\\\\\\${FLATPAK_NAME}\\\\\\\\config")
  else SEARCH=("\\\\\\\\?\\\\\\H:\\\\\\\\\.config"); fi
       REPLACE=("XOCONFIGXO")
  
  # *.desktop and *.sh files
  if [ "${INSTALL_TYPE}" = "flatpak" ]; then
       SEARCH+=("\.var\/app\/${FLATPAK_NAME}\/data\/prefixes")
  else SEARCH+=("\.local\/share\/winezgui"); fi
       REPLACE+=("XOPREFIXXO")
  
  # *.desktop and *.sh files
  if [ "${INSTALL_TYPE}" = "flatpak" ]; then
       SEARCH+=("\.local\/share\/applications\/winezgui\/${FLATPAK_NAME}")
  else SEARCH+=("\.local\/share\/applications\/winezgui"); fi
       REPLACE+=("XODESKTOPDIRXO")

  # *.reg files
  if [ "${INSTALL_TYPE}" = "flatpak" ]; then
       SSSSSSS=("\.var\\\\\\\\app\\\\\\\\${FLATPAK_NAME}")
       SEARCH+=("${SSSSSSS}\\\\\\\\data\\\\\\\\applications")
  else SEARCH+=("\.local\\\\\\\\share\\\\\\\\applications");  fi
       REPLACE+=("XOAPPLICATIONSXO")

  # Paths
  SEARCH+=("\.local\/share\/applications")
  REPLACE+=("XOAPPLICATIONSDIRXO")
  
  # \\user\\user *.reg
  SEARCH+=("\\\\\\\\users\\\\\\\\${USER}")
  REPLACE+=("XOREGUSERSUSERXO")

  # \\home\\user\\ *.reg
  SEARCH+=("\\\\\\\\home\\\\\\\\${USER}")
  REPLACE+=("XOREGHOMEUSERXO")

  # "USERNAME"="user" user.reg
  SEARCH+=(\"USERNAME\"=\"${USER}\")
  REPLACE+=("XOREGUSERNAMEUSERXO")

  SEARCH+=("\/home\/${USER}")
  REPLACE+=("XOUSERHOMEXO")
  
  # Variables
  SEARCH+=("${FLATPAK_NAME}")
  REPLACE+=("XOFLATPAKIDXO")
  
  SEARCH+=("${WINEEXE}")
  REPLACE+=("XOWINEEXEXO")

  SEARCH+=("${WINEVER}")
  REPLACE+=("XOWINEVERXO")

#  SEARCH+=("${USER}")
#  REPLACE+=("XOUSERXO")

# Now do the processing with the above search and replace values

  LEN=${#SEARCH[@]}

  # By default process (SEARCH->REPLACE)
  if [ "$1" = "restore" ]; then
      echo "Restoring preprocessed variables"
      for (( i=0; i <${LEN}; i++ ))
          do
          echo "Replacing: ${REPLACE[$i]} with ${SEARCH[$i]}"
          sed "s/${REPLACE[$i]}/${SEARCH[$i]}/g" -i ${BACKUPNAME}/*.reg
          sed "s/${REPLACE[$i]}/${SEARCH[$i]}/g" -i ${BACKUPNAME}/*.txt
          sed "s/${REPLACE[$i]}/${SEARCH[$i]}/g" -i ${BACKUPNAME}/*.desktop
          sed "s/${REPLACE[$i]}/${SEARCH[$i]}/g" -i ${BACKUPNAME}/*.sh
      done
      # Rename Directory on Restore
      mv -v "${BACKUPNAME}/drive_c/users/XOUSERXO" \
            "${BACKUPNAME}/drive_c/users/${USER}"

      # Recreate Links to H: and G: links on Restore
      echo "Recreating Links to H: and G: links in wine prefix"
      ln -svf "${EXE_PATH}" "${WINEZPREFIX}/${BACKUPNAME}/dosdevices/g:"
      ln -svf "${HOME}"     "${WINEZPREFIX}/${BACKUPNAME}/dosdevices/h:"


      # Set install type
      sed   "s|\(export INSTALL\_TYPE=\).*|\1${INSTALL_TYPE}|g" -i \
             ${BACKUPNAME}/*.sh
      # set flatpak name on restoring (flatpak)
      sed   "s|\(export FLATPAK\_NAME=\).*|\1${FLATPAK_NAME}|g" -i \
             ${BACKUPNAME}/*.sh
  else
      echo "Processing Registry and Info files"
      for (( i=0; i <${LEN}; i++ ))
      do
         echo "Replacing: ${SEARCH[$i]} with ${REPLACE[$i]}"
         sed "s/${SEARCH[$i]}/${REPLACE[$i]}/g" -i ${BACKUPNAME}/*.reg
         sed "s/${SEARCH[$i]}/${REPLACE[$i]}/g" -i ${BACKUPNAME}/*.txt
         sed "s/${SEARCH[$i]}/${REPLACE[$i]}/g" -i ${BACKUPNAME}/*.desktop
         sed "s/${SEARCH[$i]}/${REPLACE[$i]}/g" -i ${BACKUPNAME}/*.sh
      done

      # Rename Directory for Backup
      mv -v "${BACKUPNAME}/drive_c/users/${USER}" \
            "${BACKUPNAME}/drive_c/users/XOUSERXO"

      # Remove H: and G: links on Backup
      echo "Removing G: and H: links from wine prefix"
      rm -v "${BACKUPNAME}/dosdevices/g:"
      rm -v "${BACKUPNAME}/dosdevices/h:"
  fi

  # Cleanup variables
  unset LEN
  unset SSSSSSS
  unset SEARCH
  unset REPLACE

}
