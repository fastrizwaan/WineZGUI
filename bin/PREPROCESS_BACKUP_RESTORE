PROCESS_FILES_FOR_BACKUP()
{
  # Unset any previously initialized variables
  unset SEARCH
  unset REPLACE
  unset FPNAME
  #  Paths needs flatpak/host specific replacement
  # *.reg files
  # flatpak name has .(period) which confuses sed
  FPNAME=$(echo ${FLATPAK_NAME}|sed "s/\\//\\\\\\//g"|sed "s/\\./\\\\./g")
  if [ "${INSTALL_TYPE}" = "flatpak" ]; then
       SEARCH=("\.var\\\\\\\\app\\\\\\\\${FPNAME}\\\\\\\\config")
  else SEARCH=("\\\\\\\\?\\\\\\H:\\\\\\\\\.config"); fi
       REPLACE=("XOCONFIGXO")
  
  # *.desktop and *.sh files
  if [ "${INSTALL_TYPE}" = "flatpak" ]; then
       SEARCH+=("\.var\/app\/${FPNAME}\/data\/prefixes")
  else SEARCH+=("\.local\/share\/winezgui"); fi
       REPLACE+=("XOPREFIXXO")
  
  # *.desktop and *.sh files
  if [ "${INSTALL_TYPE}" = "flatpak" ]; then
       SEARCH+=("\.local\/share\/applications\/winezgui\/${FPNAME}")
  else SEARCH+=("\.local\/share\/applications\/winezgui"); fi
       REPLACE+=("XODESKTOPDIRXO")

  # *.reg files
  if [ "${INSTALL_TYPE}" = "flatpak" ]; then
       SSSSSSS=("\.var\\\\\\\\app\\\\\\\\${FPNAME}")
       SEARCH+=("${SSSSSSS}\\\\\\\\data\\\\\\\\applications")
  else SEARCH+=("\.local\\\\\\\\share\\\\\\\\applications");  fi
       REPLACE+=("XOAPPLICATIONSXO")

  # Paths
  SEARCH+=("\.local\/share\/applications")
  REPLACE+=("XOAPPLICATIONSDIRXO")
  
  # \\user\\user *.reg
  SEARCH+=("\\\\\\\\users\\\\\\\\${USER}")
  REPLACE+=("XOREGUSERSUSERXO")

  # \\home\\user\\ *.reg
  SEARCH+=("\\\\\\\\home\\\\\\\\${USER}")
  REPLACE+=("XOREGHOMEUSERXO")

  # "USERNAME"="user" user.reg
  SEARCH+=(\"USERNAME\"=\"${USER}\")
  REPLACE+=("XOREGUSERNAMEUSERXO")

  SEARCH+=("\/home\/${USER}")
  REPLACE+=("XOUSERHOMEXO")
  
  # Variables
  FPNAME=$(echo ${FLATPAK_NAME}|sed "s/\\//\\\\\\//g"|sed "s/\\./\\\\./g")
  SEARCH+=("${FPNAME}")
  REPLACE+=("XOFLATPAKIDXO")
  
  WEXE=$(echo ${WINEEXE}|sed "s/\\//\\\\\\//g"|sed "s/\\./\\\\./g")
  SEARCH+=("${WEXE}")
  REPLACE+=("XOWINEEXEXO")
  
  WVER=$(echo ${WINEVER}|sed "s/\\//\\\\\\//g"|sed "s/\\./\\\\./g")
  SEARCH+=("${WVER}")
  REPLACE+=("XOWINEVERXO")

#  SEARCH+=("${USER}")
#  REPLACE+=("XOUSERXO")

# Now do the processing with the above search and replace values

  LEN=${#SEARCH[@]}

  # By default process (SEARCH->REPLACE)
  if [ "$1" = "restore" ]; then
       echo "Restoring preprocessed variables"
       for (( i=0; i <${LEN}; i++ ))
           do
           echo "Replacing: ${REPLACE[$i]} with ${SEARCH[$i]}"
           sed "s/${REPLACE[$i]}/${SEARCH[$i]}/g" -i ${BACKUPNAME}/*.reg
           sed "s/${REPLACE[$i]}/${SEARCH[$i]}/g" -i ${BACKUPNAME}/*.txt
           sed "s/${REPLACE[$i]}/${SEARCH[$i]}/g" -i ${BACKUPNAME}/*.desktop
           sed "s/${REPLACE[$i]}/${SEARCH[$i]}/g" -i ${BACKUPNAME}/*.sh
       done
       # Rename Directory on Restore
       mv -v "${BACKUPNAME}/drive_c/users/XOUSERXO" \
             "${BACKUPNAME}/drive_c/users/${USER}"

       # Recreate Links to H: and G: links on Restore
       echo "Recreating Links to H: and G: links in wine prefix"
       # Skip Default prefix, as there's no game exe associated with it.
       if ! [ "${BACKUPNAME}" = "default" ]; then
              
              # Get EXE_PATH (where Game.exe is located)
              FIND_EXE_PATH=$(grep "export EXE_PATH=\(.*\)" \
                              "${BACKUPNAME}/${BACKUPNAME}.sh" )
              echo "EXE_PATH found ${FIND_EXE_PATH}"
              ln -svf "${FIND_EXE_PATH}" \
                      "${WINEZPREFIX}/${BACKUPNAME}/dosdevices/g:"
       fi
              ln -svf "${HOME}" "${WINEZPREFIX}/${BACKUPNAME}/dosdevices/h:"


       # Set install type
       sed   "s|\(export INSTALL\_TYPE=\).*|\1${INSTALL_TYPE}|g" -i \
              ${BACKUPNAME}/*.sh
       # set flatpak name on restoring (flatpak)
       sed   "s|\(export FLATPAK\_NAME=\).*|\1${FLATPAK_NAME}|g" -i \
              ${BACKUPNAME}/*.sh
  else
       echo "Processing Registry and Info files"
       for (( i=0; i <${LEN}; i++ ))
       do
          echo "Replacing: ${SEARCH[$i]} with ${REPLACE[$i]}"
          sed "s/${SEARCH[$i]}/${REPLACE[$i]}/g" -i ${BACKUPNAME}/*.reg
          sed "s/${SEARCH[$i]}/${REPLACE[$i]}/g" -i ${BACKUPNAME}/*.txt
          sed "s/${SEARCH[$i]}/${REPLACE[$i]}/g" -i ${BACKUPNAME}/*.desktop
          sed "s/${SEARCH[$i]}/${REPLACE[$i]}/g" -i ${BACKUPNAME}/*.sh
       done

       # Rename Directory for Backup
       mv -v "${BACKUPNAME}/drive_c/users/${USER}" \
             "${BACKUPNAME}/drive_c/users/XOUSERXO"

       # Remove H: and G: links on Backup
       echo "Removing G: and H: links from wine prefix"
       # Do not remove g: as default prefix does not have g:
       if ! [ "${BACKUPNAME}" = "default" ]; then
              rm -v "${BACKUPNAME}/dosdevices/g:"
       fi
              rm -v "${BACKUPNAME}/dosdevices/h:"
  fi

  # Cleanup variables
  unset LEN
  unset SSSSSSS
  unset SEARCH
  unset REPLACE
  unset FIND_EXE_PATH
  unset FPNAME
  unset WEXE
  unset WVER

}
