WineZGUI_Open_Exe()
{
  HEADER="$(basename ${0}): ${FUNCNAME[0]}"
  echo "I: $(basename ${0}): Launched ${FUNCNAME[0]}"
  unset EXE_FILE 
  unset F
  unset T
  
  # If no argument is given, ask to select and open exe/msi file
  if [ -z "${1}" ]; then
       DBUG "I: ${HEADER}: No arugment given. Select an exe/msi file."
       F="*.exe *.msi"
       T="Select a File"
       EXE_FILE="$(zenity --file-filter="${F}" --title="${T}" --file-selection)"
       # If no exe is selected
       if [ -z "${EXE_FILE}" ];  then
            DBUG "I: ${HEADER}: Cancelled!"
            return 1
       fi
       DBUG "I: ${HEADER}: Selected file: ${EXE_FILE}"
  else
       export EXE_FILE="${1}"
       DBUG "I: ${HEADER}: Received Argument ${EXE_FILE}"
  fi
  
  ## From Open_Exe Function from WineZGUI ##
  
  # If file not found, exit
  if ! [ -f "${EXE_FILE}"  ]; then
       echo "E: ${HEADER}: Cannot find ${EXE_FILE}, exiting!"
       exit 1
  fi
  
  # If file is wzt (prefix backup or game bundle), restore it
  if [ "${IS_EXE}" = "wzt" ]; then
        export WZT_FILE="${EXE_FILE}"
        DBUG "I: ${HEADER}: WineZGUI Backup file submitted"
        source ${DATADIR}/winezgui-backup-restore-function 
        source ${DATADIR}/winezgui-restore-wzt 
        Restore_Wzt_File
        DBUG "I: ${HEADER}: Exiting main program after restoring backup"
        exit 0;
  fi
  
  DBUG "I: ${HEADER}: File is ${EXE_FILE}"
  # Create required variables using EXE_FILE
  export EXE_FILE=$(realpath -m "${EXE_FILE}")
  export EXE_NAME=$(basename    "${EXE_FILE}")
  export EXE_PATH=$(dirname     "${EXE_FILE}")
  export EXE_NOSP=$(echo "${EXE_NAME}"|tr " " "_")
  export EXE_LESS=$(echo "${EXE_NOSP}"|sed "s/\.[Ee][Xx][Ee]//"|sed "s/\.[Mm][Ss][Ii]//")
  export EXE_EXT="${EXE_FILE##*.}"
  
  
  DBUG "= = = = = = = = = = = = = = = = = = = 
  export EXE_FILE=$EXE_FILE
  export EXE_NAME=$EXE_NAME
  export EXE_PATH=$EXE_PATH
  export EXE_NOSP=$EXE_NOSP
  export EXE_LESS=$EXE_LESS
  export EXE_EXT=$EXE_EXT
  "

  # Create temporary variables for this function
  export WINEPREFIX_SUBDIR="${PREFIXES_DIR}/${EXE_LESS}"
  SCRIPT_NAME="${EXE_LESS}.sh"
  SCRIPT_FILE_TO_RUN="${WINEPREFIX_SUBDIR}/${SCRIPT_NAME}"
  WINEZGUI_CREATE_PREFIX="${DATADIR}/winezgui-create-prefix"

  DBUG "= = = = = = = = = = = = = = = = = = = 
  export WINEPREFIX_SUBDIR=$WINEPREFIX_SUBDIR
  export SCRIPT_NAME=$SCRIPT_NAME
  export SCRIPT_FILE_TO_RUN=$SCRIPT_FILE_TO_RUN
  export WINEZGUI_CREATE_PREFIX=$WINEZGUI_CREATE_PREFIX
  ---------------------------------------------"
  DBUG "I: ${HEADER}: Checking whether ${SCRIPT_FILE_TO_RUN} exists."
  
  # If existing prefix exists for the exe
  if [ -f  "${SCRIPT_FILE_TO_RUN}" ]; then
       DBUG "I: ${HEADER}: found Script ${SCRIPT_NAME}! Launching..."
       "${SCRIPT_FILE_TO_RUN}" # Run the script file associated with the exe
       DBUG "I: ${HEADER}: Re-Launching WineZGUI_Window after ${SCRIPT_NAME}"
  else # Create prefix and script for the exe
       DBUG "I: ${HEADER}: Creating Prefix for ${EXE_NAME}"
       ${WINEZGUI_CREATE_PREFIX} "${EXE_FILE}"
       echo "${WINEZGUI_CREATE_PREFIX} ${EXE_FILE}"
       # Launch after creating new prefix
       DBUG "I: ${HEADER}: Created Script: ${SCRIPT_FILE_TO_RUN}"
       
       if [ -f  "${SCRIPT_FILE_TO_RUN}" ]; then
            DBUG "I: ${HEADER}: Launching ${SCRIPT_NAME}"
            "${SCRIPT_FILE_TO_RUN}"
       else
            echo "E: ${HEADER}: ${SCRIPT_NAME} not found!"
       fi
  fi
  unset WINEPREFIX_SUBDIR
  unset SCRIPT_NAME
  unset SCRIPT_FILE_TO_RUN

  return 0
}
