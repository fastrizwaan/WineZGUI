#winezgui-import-gamedir-into-prefix
WineZGUI_Import_Gamedir_Into_Prefix()
{

  if [[ "${EXE_FILE}" == *"${PREFIXDIR}"* ]] ; then
        DBUG "I: Script: ${FUNCNAME[0]}: Game Directory already inside Prefix!"
        ZENITY_CMD --error --title="Import Gamedir" --text="Game Directory already inside Prefix!"
        return 1
  fi


  unset DO_NOT_BUNDLE_FROM
  # 1.1 List of standard Linux directories to avoid
  # 1.1.1 Get root dirs using find to handle of different OS
  ROOT_DIRS="$(find / -maxdepth 1 -type d)"
  
  MOUNTED_PARTITONs="$(df |grep "/"|sed "s/  */ /g"|cut -f6 -d " ")"
  # 1.1.3 Add Root dirs and mounted partitions to Do_not_bundle variable
  DO_NOT_BUNDLE_FROM+="${ROOT_DIRS} "
  DO_NOT_BUNDLE_FROM+="${MOUNTED_PARTITONs} "
  # 1.1.4 Manually include these known directories
  DO_NOT_BUNDLE_FROM+="/    /boot /dev  /etc  /home /media "
  DO_NOT_BUNDLE_FROM+="/mnt /opt  /proc /root /run "
  DO_NOT_BUNDLE_FROM+="/srv /sys  /tmp  /usr  /var "
  DO_NOT_BUNDLE_FROM+="${HOME} "
  DO_NOT_BUNDLE_FROM+="${HOME}/Desktop    ${HOME}/Documents "
  DO_NOT_BUNDLE_FROM+="${HOME}/Downloads  ${HOME}/Music "
  DO_NOT_BUNDLE_FROM+="${HOME}/Pictures   ${HOME}/Public "
  DO_NOT_BUNDLE_FROM+="${HOME}/Templates  ${HOME}/Videos "


  # 1.2 If game.exe file is inside standard (DO_NOT_BUNDLE_FROM) directories
  # Tell user to copy to a separate gamedir then try to create bundle
  if [[ "${DO_NOT_BUNDLE_FROM}" == *"${EXE_PATH}"* ]]; then
      MSG1="Cannot Copy ${EXE_PATH} as Game directory"
      MSG2="Copy/Move files to a different directory to create bundle!"

      DBUG "I: Script: ${FUNCNAME[0]}: ${EXE_PATH}"
      echo "E: Script: ${FUNCNAME[0]}: ${MSG1}"
      echo "E: Script: ${FUNCNAME[0]}: ${MSG2}"
      echo "E:${FUNCNAME[0]}: Cancelling Backup!"
      ${ZENITY_CMD} --error --no-wrap --text "${MSG1}\n${MSG2}" \
            --title "Cannot copy ${EXE_PATH}"
      unset DO_NOT_BUNDLE_FROM
      WineZGUI_Window
  fi

  #FIXME

  # TEST GAMEDIR SIZE
  # CHECK WINEZGUI AVAILABLE SPACE BEFORE COPYING
  # COPY FILES AND
  # UPDATE EXE_PATH in each script file
  f

  unset DO_NOT_BUNDLE_FROM
   ########### NOW CHANGE THE ABOVE IN SCRIPTFILE ###########
  E="export " # for 80 column rule
  sed "s|${E}PROGNAME=.*|${E}PROGNAME=\"${NEW_PROGNAME}\"|g; t;" -i ${SCRIPTFILE} || echo "Failed:sh1: ${NEW_PROGNAME}"
  sed "s|${E}EXE_FILE=.*|${E}EXE_FILE=\"${NEW_EXE_FILE}\"|g; t;" -i ${SCRIPTFILE} || echo "Failed:sh2: ${NEW_EXE_FILE}"
  sed "s|${E}EXE_NAME=.*|${E}EXE_NAME=\"${NEW_EXE_NAME}\"|g; t;" -i ${SCRIPTFILE} || echo "Failed:sh3: ${NEW_EXE_NAME}"
  sed "s|${E}EXE_PATH=.*|${E}EXE_PATH=\"${NEW_EXE_PATH}\"|g; t;" -i ${SCRIPTFILE} || echo "Failed:sh4: ${NEW_EXE_PATH}"
  sed "s|${E}EXE_NOSP=.*|${E}EXE_NOSP=\"${NEW_EXE_NOSP}\"|g; t;" -i ${SCRIPTFILE} || echo "Failed:sh5: ${NEW_EXE_NOSP}"
  sed "s|${E}CHECKSUM=.*|${E}CHECKSUM=\"${NEW_CHECKSUM}\"|g; t;" -i ${SCRIPTFILE} || echo "Failed:sh6: ${NEW_CHECKSUM}"
  sed "s|${E}EXE_LESS=.*|${E}EXE_LESS=\"${NEW_EXE_LESS}\"|g; t;" -i ${SCRIPTFILE} || echo "Failed:sh7: ${NEW_EXE_LESS}"

  ####### Change Info.yml
  sed "s|Name:.*|Name:${NEW_PROGNAME}|g; t;"            -i "${INFOFILE}" || echo "Failed: Info.yml1:${NEW_PROGNAME}"
  sed "s|Exe:.*|Exe:${NEW_EXE_FILE}|g; t;"              -i "${INFOFILE}" || echo "Failed: Info.yml2:${NEW_EXE_FILE}"
  sed "s|Exe Path:.*|Exe Path:${NEW_EXE_PATH}|g; t;"    -i "${INFOFILE}" || echo "Failed: Info.yml3:${NEW_EXE_PATH}"
  sed "s|Sha256sum:.*|Sha256sum:${NEW_CHECKSUM}|g; t;"  -i "${INFOFILE}" || echo "Failed: Info.yml4:${NEW_CHECKSUM}"

  ####### Change Desktop file
  sed "s|Name=.*|Name=${NEW_PROGNAME}|g; t;" -i "${DESKTOPFILE}" || echo "Failed: desktop1:${NEW_PROGNAME}"
  sed "s|Keywords=.*|Keywords=winezgui; game; ${NEW_PROGNAME}|g; t;" -i "${DESKTOPFILE}" || echo "Failed: desktop2: ${NEW_PROGNAME}"
  # Launch Script after modification
  "${SCRIPTFILE}" &
  exit 0
}