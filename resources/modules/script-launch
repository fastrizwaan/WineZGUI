# Launch the Script file
#
# 1. Test if the given exe exists (if not found ask user to locate it)
# 2. Goto Game Directory
# 3. Launch The EXE file
# 4. After the Launch if lnk and .desktop files are found inside wine prefix
Script_Launch()
{
  DBUG "I: Script: Launched ${FUNCNAME[0]}"
  echo "--------------------- ${FUNCNAME[0]} -------------------------"
  source "${WINEZGUI_SCRIPTS}/script-check-variables-loaded-or-not"
  Script_Check_Variables_Loaded_Or_Not
  FOUND_EXE_FILES="${PREFIXDIR}/found-exe-files.yml"
  if [ -z "${1}" ]; then
       # 1. Test if the given exe exists (if not found ask user to locate it)
       Locate_Exe_Function
       exe_name=$(basename "${EXE_FILE}")
       exe_path=$(dirname  "${EXE_FILE}")
  else # Use passed argument as exe file
       exe_name=$(basename "${1}")
       exe_path=$(dirname  "${1}")
  fi
  # 2. Goto Game Directory
  cd "${exe_path}"
  DBUG "I: Script: Launching ${exe_name}"

  # CMDLINE exe argument 
  if [ -f "${PREFIXDIR}/cmdline.yml" ]; then
       DBUG "I: Script: found CMDLINE arguments"
       EXE_ARGUMENTS=$(grep args "${PREFIXDIR}/cmdline.yml"|cut -f2 -d ":")
       DBUG "I: Script: args=${EXE_ARGUMENTS}"
  fi

  # Check for Wine version change
  CURRENT_WINE_VERSION=$(${WINE_CMD} --version|cut -f1 -d ' ')
  CREATED_WINE_VERSION=$(grep -i "Wine:" ${INFOFILE}|cut -f2 -d ":")
  DBUG "I: Script: Created using Wine Version:${CREATED_WINE_VERSION}"
  DBUG "I: Script: Current Wine Version is   :${CURRENT_WINE_VERSION}"

  if [ "${CURRENT_WINE_VERSION}" != "${CREATED_WINE_VERSION}" ]; then
       DBUG "I: Script: Wine Version is different!"
       unset TEXTMSG
       TEXTMSG+="Created using Wine Version:${CREATED_WINE_VERSION}\n"
       TEXTMSG+="Current Wine Version is   :${CURRENT_WINE_VERSION}\n"
       TEXTMSG+="Update version Info?"
       unset TITLEMSG
       TITLEMSG+="Wine version mismatch!"

       ${ZENITY_CMD} --question --width 400 --title "${TITLEMSG}" --text "${TEXTMSG}"
       ANSWER=$?
       if [ ${ANSWER} -eq 0 ] && [ -w "${INFOFILE}" ]; then
            sed "s|${CREATED_WINE_VERSION}|${CURRENT_WINE_VERSION}|g" \
            -i "${INFOFILE}"
            DBUG "I: Script: Updated wine version to ${CURRENT_WINE_VERSION}"
       fi
  fi

  # 3. Launch The EXE file
  ${WINE_CMD} "${exe_name}" ${EXE_ARGUMENTS}

  # 4. Remove wine installed shortcuts, unclutters menu
  source "${WINEZGUI_SCRIPTS}/winezgui-remove-wine-created-shortcuts"
  Remove_Wine_Created_Shortcuts

  # Detect Setup or Direct Play exe
#   TEST_NAME=$(echo "${exe_name}"| tr [A-Z] [a-z]) # Change case to test
#   if [[ "${TEST_NAME}" == *"setup"* ]]   || \
#      [[ "${TEST_NAME}" == *"install"* ]] ; then
#        DBUG "I: Script: Launching =-= SETUP INSTALLER =-="
#      #   source "${WINEZGUI_SCRIPTS}/script-change-exe-and-prefix"
#      #   Script_Change_Exe_And_Prefix
#        source "${WINEZGUI_SCRIPTS}/script-create-shortcuts-for-found-exes"
#        Script_Create_Shortcuts_For_Found_Exes
#   else
#        DBUG "I: Script: Launching script find exe"
#        source "${WINEZGUI_SCRIPTS}/script-find-installed-exe"
#        Script_Find_Installed_Exe
#   fi
  # On 1st run create shortcuts for all found exe
  if [ -f "${FOUND_EXE_FILES}" ]; then
       source "${WINEZGUI_SCRIPTS}/script-find-installed-exe"
       Script_Find_Installed_Exe
  else # from 2nd run onwards, detect new exe files.
       DBUG "I: SCRIPT LAUNCH: 1st launch detected........................"
       source "${WINEZGUI_SCRIPTS}/script-create-shortcuts-for-found-exes"
       Script_Create_Shortcuts_For_Found_Exes 
  fi
}
