#  using flatpak install and script is running from flatpak container
# Check if it is a flatpak based script
# Check if it is running from inside flatpak container
# and gnome terminal is found on host
WineZGUI_Open_Terminal()
{
  DBUG "I: $(basename ${0}): Launched ${FUNCNAME[0]}!"

  if   [ "${WINE_CMD}" = "/app/bin/wine" ] && \
       [ $(flatpak-spawn  --host which gnome-terminal) ]; then
         DBUG "I: Open Terminal: Gnome-terminal found via flatpak-spawn"
         export GNOME_TERMINAL=0 ; #Available via flatpak-spwan
  elif [ "${WINE_CMD}" != "/app/bin/wine" ] && \
       [ $(which gnome-terminal) ]; then
         DBUG "I: Open Terminal: Gnome-terminal found on host system"
         export GNOME_TERMINAL=0 ; #Available on host install
  else
         DBUG "I: Open Terminal: Gnome-terminal not found"
         export GNOME_TERMINAL=1 ; #Unavailable on host
  fi


  # Using Variable, If gnome terminal is not found inform user
  if [ ${GNOME_TERMINAL} -eq 1 ]; then
       ${ZENITY_CMD} --title "${SELECTION}" \
              --width=500 --height=30 --info  \
              --text "This feature requires \"gnome-terminal\""
  fi

  # If found in flatpak sandbox, use flatpak-spawn
  if [ "${WINE_CMD}" = "/app/bin/wine" ] && \
     [ $(flatpak-spawn --host echo 0) ]; then
       DBUG "I: Open Terminal: Opening gnome-terminal from sandbox"
       # Shell needs WINEPREFIX as we are working with wine
       export WINEPREFIX=${DEFAULT}
       flatpak-spawn --host gnome-terminal --wait --                  \
       flatpak --command=bash run ${FLATPAK_NAME}                     \
       -c "cd ${WINEZGUIDIR}; export WINEPREFIX=${WINEPREFIX}; exec bash -i"
      
  else # If found on host, run gnome-terminal
       DBUG "I: Open Terminal: Opening gnome-terminal from host"
       export WINEPREFIX=${DEFAULT}
       gnome-terminal --wait --                              \
            bash -c "export WINEPREFIX=${WINEPREFIX};        \
            cd ${WINEZGUIDIR};                               \
            exec bash -i"
  fi
}
