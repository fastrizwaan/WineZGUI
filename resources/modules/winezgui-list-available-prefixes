# winezgui-list-available-templates
# Finds exe installed in drive_c by an installer
# and set the variable SELECTED_PREFIX
List_Available_Prefixes()
{
  echo "I: $(basename ${0}): Launched ${FUNCNAME[0]}"
  unset COMMAND count SHOW_OPTION NAMES FILES RESULT SEARCH_LIST
  
  SAVEIFS=${IFS}
  IFS=$(echo -en "\n\b")

  count=0
  NAMES=()
  FILES=()
  # Find all exe files in drive_c Exclude windows directory,
  # and common exe files present in Program Files directory
  # Add those files to FILES array and filenames to NAMES array

  SEARCH_LIST=$(find ${PREFIXES_DIR}/* -maxdepth 0 -type d -print \
                2>/dev/null| tr '\n' '|')

  PREFIXES_FOUND=$(echo ${SEARCH_LIST})

  if [ -z "${PREFIXES_FOUND}" ] ; then
       zenity --error --title "${APP_WITH_VER} - Prefix!" \
              --text "Prefixes directory empty.\nUse \"Open exe...\" to install!"
       WineZGUI_Window
  fi
  # if PREFIXES_FOUND has value, then only change exe
  for i in $(echo ${SEARCH_LIST}|tr '|' '\n'|sort)
  do
      RealName=$(basename "$i")
      RealFile=$(realpath -m "$i")

      # If 1st value is empty, enable it
      if [ -z "${SHOW_OPTION}" ]; then
           SHOW_OPTION+="TRUE \"${RealName}\""
           SHOW_OPTION+=" "
           NAMES+=("${RealName}")
           FILES+=("${RealFile}")
      else
           SHOW_OPTION+="0 \"${RealName}\""
           SHOW_OPTION+=" "
           NAMES+=("${RealName}")
           FILES+=("${RealFile}")
      fi
      count=$(expr ${count} + 1)
  done
  IFS=${SAVEIFS}

 # 3. Show the found exe files using zenity
  unset COMMAND
  COMMAND+="zenity --title=\"${APP_WITH_VER}\" "
  COMMAND+="--text \"Select Prefix...\" --radiolist --list "
  COMMAND+="--hide-header --column \" \" --column \"Action\" ${SHOW_OPTION}"
  RESULT=$(eval ${COMMAND})

  if [ -z "${RESULT}" ]; then
       DBUG "I: ${FUNCNAME[0]}... Cancelled!"
       WineZGUI_Window
  fi

  count=0
  # 4. Find which file the user selected and set the selected exe into variable
  for i in "${NAMES[@]}"; do
      if [ "$i" = "$RESULT" ]; then
           DBUG "I: ${FUNCNAME[0]}: Selected $i"
           DBUG "I: ${FUNCNAME[0]}: File is ${FILES[${count}]}"
           export SELECTED_PREFIX="${FILES[${count}]}"
           break
      fi
      count=$(expr ${count} + 1)
  done

}
