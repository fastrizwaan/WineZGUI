#!/usr/bin/env bash
# script-change
script-change()
{
  dbug "I: Script: Launched ${FUNCNAME[0]}"
  
  SOURCE "script-check-variables-loaded-or-not"
  script-check-variables-loaded-or-not

  # For Zenity 4
  ZENITY_VERSION=$(${ZENITY_CMD} --version|cut -f1 -d ".")
  if [ "${ZENITY_VERSION}" -eq 4 ]; then
       WINDOW_HEIGHT=500
       WINDOW_WIDTH=500
  else
       WINDOW_HEIGHT=360
       WINDOW_WIDTH=360
  fi

  CHANGE_OPTION=$(${ZENITY_CMD} --title "${PROGNAME} - Change!"    \
                         --window-icon="${ICON}"            \
                         --width=${WINDOW_WIDTH}            \
                         --height=${WINDOW_HEIGHT}          \
                         --list      --hide-header          \
                         --radiolist --column " "           \
                         --column "Action"                  \
                                0 "Runner..."               \
                                0 "Shortcut Name..."        \
                                0 "Prefix Directory Name..."\
                                0 "Wine Architecture..."    \
                                0 "Default Exe..."          \
                                0 "Shortcut Icon..."        \
                                0 "Application Category..." \
                         --text   "Change..." )

  # Exit if Cancel is clicked
  if   [ -z "${CHANGE_OPTION}" ]; then
         dbug "I: Script: Cancel Selected. Bye!"
         return 1
  fi
  
  dbug "I: Script: ${FUNCNAME[0]}: Selected ${CHANGE_OPTION}"
  
  if   [ "${CHANGE_OPTION}" = "Runner..." ]; then
         SOURCE "script-change-runner"
         script-change-runner

  elif [ "${CHANGE_OPTION}" = "Shortcut Name..." ]; then
         SOURCE "script-change-name"
         script-change-name

  elif [ "${CHANGE_OPTION}" = "Prefix Directory Name..." ]; then
         SOURCE "script-change-prefix"
         script-change-prefix
         
  elif [ "${CHANGE_OPTION}" = "Wine Architecture..." ]; then
         SOURCE "script-change-arch"
         script-change-arch
         
  elif [ "${CHANGE_OPTION}" = "Default Exe..." ]; then
         SOURCE "script-change-exe"
         script-change-exe # Call the function in the above file
         
  elif [ "${CHANGE_OPTION}" = "Shortcut Icon..." ]; then
         dbug "I: Script: Shortcut Icon... Selected!"
         SOURCE "script-change-icon"
         script-change-icon
         
  elif [ "${CHANGE_OPTION}" = "Application Category..." ]; then
         dbug "I: Script: Application Category... Selected!"
         SOURCE "script-change-category"
         script-change-category
  fi

  return 0
}

